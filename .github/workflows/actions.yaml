name: Actions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  unittest:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-latest, pip: ~/.cache/pip }
          - { os: macos-latest, pip: ~/Library/Caches/pip }
        python: ["3.8", "3.9", "3.10"]
    name: "${{ matrix.config.os }} Python ${{ matrix.python }}"
    steps:
      - uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Cache
        uses: actions/cache@v3
        with:
          path: ${{ matrix.config.pip }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[test]
      - name: Test
        run: python -m unittest discover
      - name: mypy
        run: mypy .
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v3
      - name: Black
        uses: psf/black@stable
        with:
          jupyter: true
  test-docs:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [unittest, lint]
    name: Test docs
    steps:
      - id: deployment
        uses: sphinx-notes/pages@v3
        with:
          publish: false
  deploy-docs:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [unittest, lint]
    name: Deploy docs
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: sphinx-notes/pages@v3
